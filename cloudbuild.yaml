steps:
  # Delete previous containers based on the image (if any running)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -x
        for tag in $(gcloud container images list-tags "gcr.io/shivam-contacts-generator/github.com/shivamgutgutia/contactsgeneratorbackend" --format='get(digest)' --limit=999999); do
          gcloud container images delete -q --force-delete-tags "gcr.io/shivam-contacts-generator/github.com/shivamgutgutia/contactsgeneratorbackend@$tag" || true
        done

  # Delete previous images
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -x
        docker images -a | grep 'gcr.io/shivam-contacts-generator/github.com/shivamgutgutia/contactsgeneratorbackend' | awk '{print $3}' | xargs -r docker rmi -f

  # Build the new image with the latest commit SHA as a tag
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/shivam-contacts-generator/github.com/shivamgutgutia/contactsgeneratorbackend:$COMMIT_SHA'
      - '-f'
      - 'Dockerfile'
      - '.'

  # Push the new image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/shivam-contacts-generator/github.com/shivamgutgutia/contactsgeneratorbackend:$COMMIT_SHA'

  # Fetch the latest commit SHA from environment variables
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        COMMIT_SHA=$(echo $COMMIT_SHA)

  # Deploy the new revision to Cloud Run using the updated image with the latest commit SHA
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy contacts-generator-backend-continuous \
          --image=gcr.io/shivam-contacts-generator/github.com/shivamgutgutia/contactsgeneratorbackend:$COMMIT_SHA \
          --region=asia-south1 \
          --project=shivam-contacts-generator \
          && gcloud run services update-traffic contacts-generator-backend-continuous --to-latest --region=asia-south1
options:
  logging: CLOUD_LOGGING_ONLY
